{
    //utility types  
    
    type Person = {
      name: string;
      age: number;
      email?: string;
      contactNo: string;
    };

    // ----------------Pick ( Pick<Type, Keys> )---------------------
    type NameAge = Pick<Person, "name" | "age">; 
    // ЁЯФ╣ Pick<Person, "name" | "age"> ржорж╛ржирзЗ Person ржЯрж╛ржЗржк ржерзЗржХрзЗ рж╢рзБржзрзБ name ржЖрж░ age ржкрзНрж░ржкрж╛рж░рзНржЯрж┐ ржирж┐рзЯрзЗ ржПржХржЯрж╛ ржирждрзБржи ржЯрж╛ржЗржк рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ
  
    // Omit
    type ContactInfo = Omit<Person, "name" | "age">;
    // ЁЯФ╣ Omit<Person, "name" | "age"> ржорж╛ржирзЗ Person ржЯрж╛ржЗржк ржерзЗржХрзЗ name ржЖрж░ age ржмрж╛ржж ржжрж┐рзЯрзЗ ржирждрзБржи ржЯрж╛ржЗржк ContactInfo ржмрж╛ржирж╛ржирзЛ рж╣рзЯрзЗржЫрзЗ
  
    // Required
    type PersonRequired = Required<Person>;
    // ЁЯФ╣ Required<Person> ржорж╛ржирзЗ Person ржЯрж╛ржЗржкрзЗрж░ рж╕ржм ржкрзНрж░ржкрж╛рж░рзНржЯрж┐ ржПржЦржи ржмрж╛ржзрзНржпрждрж╛ржорзВрж▓ржХ (email ржЖржЧрзЗржУ optional ржЫрж┐рж▓, ржПржЦржи ржЖрж░ ржирж╛)
  
    // Partial
    type PersonPartial = Partial<Person>;
    // ЁЯФ╣ Partial<Person> ржорж╛ржирзЗ Person ржЯрж╛ржЗржкрзЗрж░ рж╕ржм ржкрзНрж░ржкрж╛рж░рзНржЯрж┐ ржПржЦржи optional рж╣рзЯрзЗ ржЧрзЗржЫрзЗ
  
    // Readonly
    type PersonReadonly = Readonly<Person>;
    // ЁЯФ╣ Readonly<Person> ржорж╛ржирзЗ Person ржЯрж╛ржЗржкрзЗрж░ рж╕ржм ржкрзНрж░ржкрж╛рж░рзНржЯрж┐ ржПржЦржи рж╢рзБржзрзБ read-only, ржорж╛ржирзЗ ржкрж░рзЗ ржорж╛ржи ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рж╛ ржпрж╛ржмрзЗ ржирж╛
  
    const person1: PersonReadonly = {
      name: "Mr. XY",
      age: 200,
      contactNo: "017",
    };
  
    person1.name = "Mr. YZ";
    //ржЯрж╛ Error ржжрж┐ржмрзЗ ржХрж╛рж░ржг Readonly ржЯрж╛ржЗржкрзЗ name ржорж╛ржи ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рж╛ ржпрж╛рзЯ ржирж╛
  
    // Record
  
    // type MyObj = {
    //   a: string;
    //   b: string;
    // };
  
    type MyObj = Record<string, number>; // <Type, Keys>
    // ЁЯФ╣ Record<string, number> ржорж╛ржирзЗ ржпрзЗржХрзЛржирзЛ string key-ржПрж░ ржЬржирзНржп value рж╣рждрзЗ рж╣ржмрзЗ number ржЯрж╛ржЗржкрзЗрж░
  
    const EmptyObj: Record<string, unknown> = {};
    // ЁЯФ╣ EmptyObj рж╣рж▓рзЛ ржПржоржи ржПржХржЯрж╛ object ржпрзЗржЦрж╛ржирзЗ ржпрзЗржХрзЛржирзЛ string key ржерж╛ржХрждрзЗ ржкрж╛рж░рзЗ, ржЖрж░ value ржПрж░ ржЯрж╛ржЗржк рж╣ржмрзЗ unknown
  
    const obj1: MyObj = {
      a: "aa",
      b: "bb",
      c: "cc",
      d: "dd",
      e: 6,
    };
    // ржПржЦрж╛ржирзЗ a, b, c, d ржПрж░ value ржЧрзБрж▓рзЛ string, ржХрж┐ржирзНрждрзБ MyObj ржЪрж╛рзЯ value ржЧрзБрж▓рзЛ number ржЯрж╛ржЗржкрзЗрж░ рж╣рзЛржХ тАФ рждрж╛ржЗ ржПржЯрж╛ error ржжрж┐ржмрзЗ
  
    //
  }
  